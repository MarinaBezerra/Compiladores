// Generated from Projeto.g4 by ANTLR 4.5.3
package autogenerated;
import org.antlr.v4.runtime.tree.ParseTreeVisitor;

/**
 * This interface defines a complete generic visitor for a parse tree produced
 * by {@link ProjetoParser}.
 *
 * @param <T> The return type of the visit operation. Use {@link Void} for
 * operations with no return type.
 */
public interface ProjetoVisitor<T> extends ParseTreeVisitor<T> {
	/**
	 * Visit a parse tree produced by the {@code Program}
	 * labeled alternative in {@link ProjetoParser#pgm}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitProgram(ProjetoParser.ProgramContext ctx);
	/**
	 * Visit a parse tree produced by the {@code DefineBin}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitDefineBin(ProjetoParser.DefineBinContext ctx);
	/**
	 * Visit a parse tree produced by the {@code DefineUn}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitDefineUn(ProjetoParser.DefineUnContext ctx);
	/**
	 * Visit a parse tree produced by the {@code Undefine}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitUndefine(ProjetoParser.UndefineContext ctx);
	/**
	 * Visit a parse tree produced by the {@code IfDefined}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitIfDefined(ProjetoParser.IfDefinedContext ctx);
	/**
	 * Visit a parse tree produced by the {@code IfNotDefined}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitIfNotDefined(ProjetoParser.IfNotDefinedContext ctx);
	/**
	 * Visit a parse tree produced by the {@code TextID}
	 * labeled alternative in {@link ProjetoParser#cod}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitTextID(ProjetoParser.TextIDContext ctx);
	/**
	 * Visit a parse tree produced by the {@code TextNumber}
	 * labeled alternative in {@link ProjetoParser#cod}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitTextNumber(ProjetoParser.TextNumberContext ctx);
	/**
	 * Visit a parse tree produced by the {@code TextSymbol}
	 * labeled alternative in {@link ProjetoParser#cod}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitTextSymbol(ProjetoParser.TextSymbolContext ctx);
}