// Generated from Projeto.g4 by ANTLR 4.5.3
package autogenerated;
import org.antlr.v4.runtime.tree.ParseTreeListener;

/**
 * This interface defines a complete listener for a parse tree produced by
 * {@link ProjetoParser}.
 */
public interface ProjetoListener extends ParseTreeListener {
	/**
	 * Enter a parse tree produced by the {@code Directives}
	 * labeled alternative in {@link ProjetoParser#pgm}.
	 * @param ctx the parse tree
	 */
	void enterDirectives(ProjetoParser.DirectivesContext ctx);
	/**
	 * Exit a parse tree produced by the {@code Directives}
	 * labeled alternative in {@link ProjetoParser#pgm}.
	 * @param ctx the parse tree
	 */
	void exitDirectives(ProjetoParser.DirectivesContext ctx);
	/**
	 * Enter a parse tree produced by the {@code DefineBin}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void enterDefineBin(ProjetoParser.DefineBinContext ctx);
	/**
	 * Exit a parse tree produced by the {@code DefineBin}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void exitDefineBin(ProjetoParser.DefineBinContext ctx);
	/**
	 * Enter a parse tree produced by the {@code DefineUn}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void enterDefineUn(ProjetoParser.DefineUnContext ctx);
	/**
	 * Exit a parse tree produced by the {@code DefineUn}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void exitDefineUn(ProjetoParser.DefineUnContext ctx);
	/**
	 * Enter a parse tree produced by the {@code Undefine}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void enterUndefine(ProjetoParser.UndefineContext ctx);
	/**
	 * Exit a parse tree produced by the {@code Undefine}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void exitUndefine(ProjetoParser.UndefineContext ctx);
	/**
	 * Enter a parse tree produced by the {@code IfDefinedRec}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void enterIfDefinedRec(ProjetoParser.IfDefinedRecContext ctx);
	/**
	 * Exit a parse tree produced by the {@code IfDefinedRec}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void exitIfDefinedRec(ProjetoParser.IfDefinedRecContext ctx);
	/**
	 * Enter a parse tree produced by the {@code IfDefinedBase}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void enterIfDefinedBase(ProjetoParser.IfDefinedBaseContext ctx);
	/**
	 * Exit a parse tree produced by the {@code IfDefinedBase}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void exitIfDefinedBase(ProjetoParser.IfDefinedBaseContext ctx);
	/**
	 * Enter a parse tree produced by the {@code IfNotDefinedRec}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void enterIfNotDefinedRec(ProjetoParser.IfNotDefinedRecContext ctx);
	/**
	 * Exit a parse tree produced by the {@code IfNotDefinedRec}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void exitIfNotDefinedRec(ProjetoParser.IfNotDefinedRecContext ctx);
	/**
	 * Enter a parse tree produced by the {@code IfNotDefinedBase}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void enterIfNotDefinedBase(ProjetoParser.IfNotDefinedBaseContext ctx);
	/**
	 * Exit a parse tree produced by the {@code IfNotDefinedBase}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void exitIfNotDefinedBase(ProjetoParser.IfNotDefinedBaseContext ctx);
	/**
	 * Enter a parse tree produced by the {@code EndIf}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void enterEndIf(ProjetoParser.EndIfContext ctx);
	/**
	 * Exit a parse tree produced by the {@code EndIf}
	 * labeled alternative in {@link ProjetoParser#dir}.
	 * @param ctx the parse tree
	 */
	void exitEndIf(ProjetoParser.EndIfContext ctx);
	/**
	 * Enter a parse tree produced by the {@code TextID}
	 * labeled alternative in {@link ProjetoParser#cod}.
	 * @param ctx the parse tree
	 */
	void enterTextID(ProjetoParser.TextIDContext ctx);
	/**
	 * Exit a parse tree produced by the {@code TextID}
	 * labeled alternative in {@link ProjetoParser#cod}.
	 * @param ctx the parse tree
	 */
	void exitTextID(ProjetoParser.TextIDContext ctx);
	/**
	 * Enter a parse tree produced by the {@code TextNumber}
	 * labeled alternative in {@link ProjetoParser#cod}.
	 * @param ctx the parse tree
	 */
	void enterTextNumber(ProjetoParser.TextNumberContext ctx);
	/**
	 * Exit a parse tree produced by the {@code TextNumber}
	 * labeled alternative in {@link ProjetoParser#cod}.
	 * @param ctx the parse tree
	 */
	void exitTextNumber(ProjetoParser.TextNumberContext ctx);
	/**
	 * Enter a parse tree produced by the {@code TextSymbol}
	 * labeled alternative in {@link ProjetoParser#cod}.
	 * @param ctx the parse tree
	 */
	void enterTextSymbol(ProjetoParser.TextSymbolContext ctx);
	/**
	 * Exit a parse tree produced by the {@code TextSymbol}
	 * labeled alternative in {@link ProjetoParser#cod}.
	 * @param ctx the parse tree
	 */
	void exitTextSymbol(ProjetoParser.TextSymbolContext ctx);
}